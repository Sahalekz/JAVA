package application;

import exception.NonEligibleException;

public class Citizen {
    private String name;
    private int id;
    private String country;
    private char sex;
    private String maritalStatus;
    private double annualIncome;
    private String economyStatus;

    public Citizen(String name, int id, String country, char sex, String maritalStatus, double annualIncome, String economyStatus) throws NonEligibleException {
        this.name = name;
        this.id = id;
        this.country = country;
        this.sex = sex;
        this.maritalStatus = maritalStatus;
        this.annualIncome = annualIncome;
        this.economyStatus = economyStatus;

        validateEligibility();
    }

    private void validateEligibility() throws NonEligibleException {
        if (isUnderage() && !isFromIndia()) {
            throw new NonEligibleException("Citizen " + name + " is underage and not from India. Cannot proceed.");
        }
    }

    private boolean isUnderage() {
        // Assuming age validation is based on certain criteria, not provided in the requirements
        // For example, checking if the person is below 18
        return false; // Replace with actual logic
    }

    private boolean isFromIndia() {
        return "India".equalsIgnoreCase(country);
    }

    @Override
    public String toString() {
        return "Citizen{" +
                "name='" + name + '\'' +
                ", id=" + id +
                ", country='" + country + '\'' +
                ", sex=" + sex +
                ", maritalStatus='" + maritalStatus + '\'' +
                ", annualIncome=" + annualIncome +
                ", economyStatus='" + economyStatus + '\'' +
                '}';
    }
}







//nextcode

package exception;

public class NonEligibleException extends Exception {
    public NonEligibleException(String message) {
        super(message);
    }
}



//nextcode

package application;

import exception.NonEligibleException;

public class MainApp {
    public static void main(String[] args) {
        try {
            Citizen citizen1 = new Citizen("John Doe", 1, "USA", 'M', "Single", 50000, "Middle Class");
            Citizen citizen2 = new Citizen("Jane Smith", 2, "India", 'F', "Married", 70000, "Upper Middle Class");

            System.out.println(citizen1);
            System.out.println(citizen2);
        } catch (NonEligibleException e) {
            System.out.println("Non-Eligible Exception: " + e.getMessage());
        }
    }
}
